buildscript {
  repositories {
    jcenter()
  }
  configurations.maybeCreate("pitest")
  dependencies {
    classpath("net.serenity-bdd:serenity-gradle-plugin:2.2.8")
   }
}

plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id 'info.solidsoft.pitest' version '1.5.0'
  id 'org.springframework.boot' version '2.4.4'
  id 'uk.gov.hmcts.java' version '0.12.2'
  id 'com.github.ben-manes.versions' version '0.36.0'
  id 'org.sonarqube' version '3.0'
  id 'com.github.spacialcircumstances.gradle-cucumber-reporting' version '0.1.23'
}

apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'project-report'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

def versions = [
  junit              : '5.6.2',
  lombok             : '1.18.20',
  reformLogging      : '5.1.7',
  serenity           : '2.1.0',
  springBoot         : springBoot.class.package.implementationVersion,
  springCloud        : '3.0.1',
  springfoxSwagger   : '3.0.0',
  restAssured        : '4.3.1',
  cucumber           : '5.5.0',
]

pmd {
  toolVersion = '6.21.0'
  sourceSets = []
}
ext['spring-framework.version'] = '5.3.7'
ext['spring-security.version'] = '5.4.5'


group = 'uk.gov.hmcts.reform.ccd.documentam'
version = '0.0.1'

allprojects {
  sourceCompatibility = '11'
  targetCompatibility = '11'
}

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.0
      }
    }
  }
}

configurations {
  functionalTestCompile.extendsFrom testCompile
  functionalTestRuntime.extendsFrom testRuntime
  cucumberRuntime.extendsFrom(functionalRuntime)
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath

  doFirst {
    generateCucumberReports.enabled = true
    javaexec {
      main = "uk.gov.hmcts.ccd.documentam.befta.CaseDocumentAmBeftaMain"
      classpath += configurations.cucumberRuntime + sourceSets.functionalTest.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
      args = ['--plugin', "json:${rootDir}/target/cucumber.json",
              '--plugin', "junit:${buildDir}/test-results/functional/cucumber.xml",
              '--tags', 'not @Ignore',
              '--glue', 'uk.gov.hmcts.befta.player', 'src/functionalTest/resources/features/']
    }
  }

  finalizedBy {
    generateCucumberReports {
      doLast{
        new File("${rootDir}/BEFTA Report for Functional Tests").mkdirs()
        file("${rootDir}/target/cucumber/cucumber-html-reports").renameTo(file("${rootDir}/BEFTA Report for Functional Tests"))
      }
    }
  }

  outputs.upToDateWhen { false }
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  serenity.outputDirectory = file("${projectDir}/integrationTest/site/reports")
  finalizedBy aggregate
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
  setTestClassesDirs(sourceSets.functionalTest.output.classesDirs)
  setClasspath(sourceSets.functionalTest.runtimeClasspath)
  include "uk/gov/hmcts/ccd/documentam/befta/**"
  useJUnitPlatform {
    includeTags 'smoke'
  }

  doLast {
    generateCucumberReports.enabled = true
    javaexec {
      main = "uk.gov.hmcts.ccd.documentam.befta.CaseDocumentAmBeftaMain"
      classpath += configurations.cucumberRuntime + sourceSets.functionalTest.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
      args = ['--plugin', "json:${rootDir}/target/cucumber.json",
              '--plugin', "junit:${buildDir}/test-results/smoke/cucumber.xml",
              '--tags', '@Smoke',
              '--glue', 'uk.gov.hmcts.befta.player', 'src/functionalTest/resources/features']
    }
  }

  finalizedBy {
    generateCucumberReports {
      doLast{
        new File("${rootDir}/BEFTA Report for Smoke Tests").mkdirs()
        file("${rootDir}/target/cucumber/cucumber-html-reports").renameTo(file("${rootDir}/BEFTA Report for Smoke Tests"))
      }
    }
  }

  outputs.upToDateWhen { false }
}

jacocoTestReport {
  executionData(test)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

jacoco {
  toolVersion = "0.8.2"
}

pitest {
  pitestVersion = "1.4.9"
  testPlugin = "junit5"
  targetClasses = ['uk.gov.hmcts.reform.ccd.documentam.*']
  excludedClasses = ['uk.gov.hmcts.reform.ccd.documentam.Application','uk.gov.hmcts.reform.ccd.documentam.util.Swagger2SpringBoot', 'uk.gov.hmcts.reform.ccd.documentam.controller.advice.ErrorConstants', 'uk.gov.hmcts.reform.ccd.documentam.configuration.*','uk.gov.hmcts.reform.ccd.documentam.apihelper.*', 'uk.gov.hmcts.reform.ccd.documentam.model.enums.*', 'uk.gov.hmcts.reform.ccd.documentam.exception.*']
  threads = 15
  outputFormats = ['XML', 'HTML']
  timestampedReports = true
  mutationThreshold = 40
}

project.tasks['pitest'].group="verification"

sonarqube {
  properties {
    property "sonar.projectName", "ccd-case-document-am-api"
    property "sonar.projectKey", "ccd-case-document-am-api"
    property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    // FIXME : RDM-11309
    property "sonar.exclusions",  "**/service/impl/DocumentManagementServiceImpl.java,"
    property "sonar.coverage.exclusions", "**/configuration/*.java,**/advice/exception/*.java,**/apihelper/*.java,**/ErrorConstants.java,**/ClassificationValueValidator.java,**/UpdateDocumentCommand.java,**/UpdateDocumentsCommand.java"
    property "sonar.junit.reportPaths", "${project.buildDir}/test-results/junit-platform"
  }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"

//https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
  maven {
    url "https://jitpack.io"
  }
  maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}


dependencies {
  implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.3'
  implementation "com.fasterxml.jackson.core:jackson-databind:2.11.1"

  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
  implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'

  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'

  implementation group: 'org.springframework', name: 'spring-context-support', version: '5.3.7'
  implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.7.0'

  implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
  implementation group: 'org.json', name: 'json', version: '20200518'

  implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging

  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.2'
  implementation group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '1.5.5'

  implementation group: 'org.springframework.security', name: 'spring-security-web', version: '5.4.4'
  implementation group: 'org.springframework.security', name: 'spring-security-config', version: '5.4.4'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server'

  implementation group: 'net.minidev', name: 'json-smart', version: '2.3'
  implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
  implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '11.0'
  implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

  implementation group: 'javax.inject', name: 'javax.inject', version: '1'
  implementation group: 'io.springfox', name: 'springfox-boot-starter', version: versions.springfoxSwagger
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: versions.springCloud

  implementation group: 'net.minidev', name: 'json-smart', version: '2.4.7'

  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
  testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit

  testImplementation (group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot) {
    exclude group: 'junit', module: 'junit'
  }
  testImplementation (group: 'com.github.hmcts', name: 'ccd-test-definitions', version: '7.0.0') {
    exclude group: 'io.rest-assured', module : 'rest-assured'
  }

  testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-stub-runner', version: '2.2.2.RELEASE'
  testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
  testImplementation group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
  testImplementation group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured
  testCompile 'com.github.hmcts:fortify-client:1.0.1:all'

  integrationTestCompile sourceSets.main.runtimeClasspath
  integrationTestCompile sourceSets.test.runtimeClasspath

  functionalTestCompile sourceSets.main.runtimeClasspath
  functionalTestCompile sourceSets.test.runtimeClasspath

}

dependencyManagement {

  dependencies {
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.61'
    // Remove once BEFTA rest-assured is updated
    dependencySet(group: 'io.rest-assured', version: '4.3.1') {
      entry 'json-path'
      entry 'xml-path'
    }

    // Versions prior to 30.0 vulnerable to CVE-2020-8908
    dependency 'com.google.guava:guava:30.1-jre'

    // CVE-2021-25122
    dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.50') {
      entry 'tomcat-embed-core'
      entry 'tomcat-embed-el'
      entry 'tomcat-embed-websocket'
    }

    dependencySet(group: 'org.codehaus.groovy', version: '3.0.7') {
      entry 'groovy'
      entry 'groovy-xml'
      entry 'groovy-json'
    }
    dependency "org.apache.httpcomponents:httpclient:4.5.13"

  }
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

task fortifyScan(type: JavaExec)  {
  main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

test {
  generateCucumberReports.enabled = false
}

mainClassName = 'uk.gov.hmcts.reform.ccd.documentam.Application'

bootJar {
  archiveName 'ccd-case-document-am-api.jar'
  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}

cucumberReports {
  outputDir = file("${projectDir}/target/cucumber")
  reports = files("${projectDir}/target/cucumber.json")
}
