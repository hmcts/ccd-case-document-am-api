server:
  port: ${PORT:4455}

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: 'health'

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  application:
    name: Spring Boot Template

security:
  anonymousPaths:
    - "/"
    - "/health"
    - "/health/liveness"
    - "/actuator/**"
    - "/loggers/**"
    - "/swagger-ui.html"
    - "/swagger-resources/**"
    - "/v2/api-docs"
    - "/webjars/springfox-swagger-ui/**"
    - "/search/**"
    - "/csrf"
    - "/error"
    - "/favicon.ico"
  ### Update list with service id of any service going to interact with casse document api
  authorisedServices:
    - ccd-case-document-am-api
    - ccd_gw
    - xui_webapp



### dependency configuration
auth.provider.service.client.baseUrl: ${IDAM_S2S_URL:http://localhost:4502}
idam:
  s2s-auth:
    totp_secret: ${S2S_SECRET:AAAAAAAAAAAAAAAB}
    microservice: ccd-case-document-am-api
    url: ${S2S_URL:http://localhost:4502}
    pbaFromUserAccountMap: false
usermap:
  pbaFromUserAccountMap:
    - "false"


auth.idam.client.baseUrl: ${idam_url:http://localhost:4501}



#auth.idam.client.detailsUri: "/o/userinfo"
## Secure roles configuration



#  datasource:
#    driver-class-name: org.postgresql.Driver
#    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}${DB_OPTIONS:}
#    username: ${DB_USER_NAME}
#    password: ${DB_PASSWORD}
#    properties:
#      charSet: UTF-8
#    hikari:
#      minimumIdle: 2
#      maximumPoolSize: 10
#      idleTimeout: 10000
#      poolName: {to-be-defined}HikariCP
#      maxLifetime: 7200000
#      connectionTimeout: 30000
#  jpa:
#    properties:
#      hibernate:
#        jdbc:
#          lob:
#            # silence the 'wall-of-text' - unnecessary exception throw about blob types
#            non_contextual_creation: true
